(name 'Control-ul.7' message '- use #copyTo:bottomContextDo: for copying the contexts- fixed some comments' id '9efa09a3-329b-fa4f-9447-f8e37365f098' date '28 April 2011' time '3:05:28.73 am' author 'ul' ancestors ((name 'Control-ul.6' message 'Intermediate snapshot:- use the serialization method #copyTo: of context instead of rolling our own' id 'ff96af71-4701-d142-bdd6-b6f45aeb491b' date '24 April 2011' time '12:56:16.598 am' author 'ul' ancestors ((name 'Control-ul.5' message '- a bit faster serialization of PartialContinuation- added PartialContinuationNotification' id '5ddedcc9-05a3-4346-925c-6a1db30425c4' date '23 April 2011' time '3:35:28.516 am' author 'ul' ancestors ((name 'Control-fbs.4' message 'Better comment, thanks to Julian Fitzell''s insight that you''re not "returning" at all - you''re "proceeding with the computation". The confusion stems from the fact that usually the return continuation means the same as "return a value to the caller of this method."' id 'c2042241-ab2c-2449-af2a-825d7e439ae8' date '18 April 2011' time '10:05:09.975 pm' author 'fbs' ancestors ((name 'Control-fbs.3' message 'Test showing "post-context" - that the partial continuation / zipper has context to its "right".' id '2a92e257-20a6-0a48-a261-c899cdc1dedb' date '17 April 2011' time '1:03:23.529 pm' author 'fbs' ancestors ((name 'Control-fbs.2' message 'Actually include shift and reset in the package!' id '19f12983-6d62-c045-86d1-05e12531deb5' date '15 April 2011' time '2:01:37.575 pm' author 'fbs' ancestors ((name 'Control-fbs.1' message 'Initial import. Basic implementation, and several tests. PartialContinuation borrows heavily from Seaside''s WAPartialContinuation: it copies verbatim the serialisation/deserialisation algorithm.' id '6d070a71-6b2e-d547-b4ed-f6099e05d1c8' date '14 April 2011' time '5:29:43.326 pm' author 'fbs' ancestors () stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())